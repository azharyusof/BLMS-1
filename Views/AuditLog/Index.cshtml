@model IEnumerable<BLMS.v2.Models.Admin.AuditLog>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Page header -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h4 class="text-bold">AUDIT LOG</h4>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="~/Home/Index">Home</a></li>
                        <li class="breadcrumb-item active">Audit Log</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="card">
            <div class="card-body">
                <table id="auditlog" class="table table-bordered" style="width:100%">
                    <thead class="text-center table-active">
                        <tr>
                            <th class="text-sm align-text-top col-md-1">
                                No.
                            </th>

                            <th class="text-sm align-text-top col-md-2">
                                @Html.DisplayNameFor(model => model.Command)
                            </th>

                            <th class="text-sm align-text-top col-md-2">
                                @Html.DisplayNameFor(model => model.SPName)
                            </th>

                            <th class="text-sm align-text-top col-md-2">
                                @Html.DisplayNameFor(model => model.ScreenPath)
                            </th>

                            <th class="text-sm align-text-top col-md-2">
                                @Html.DisplayNameFor(model => model.OldValue)
                            </th>

                            <th class="text-sm align-text-top col-md-2">
                                @Html.DisplayNameFor(model => model.NewValue)
                            </th>

                            <th class="text-sm align-text-top col-md-2">
                                @Html.DisplayNameFor(model => model.CreatedBy)
                            </th>

                            <th class="text-sm align-text-top col-md-2">
                                @Html.DisplayNameFor(model => model.CreatedDt)
                            </th>

                        </tr>
                    </thead>
                    <tbody class="text-center">

                        @{
                        int i = 1;

                            foreach (var item in Model)
                            {
                             <tr>
                               <td class="text-sm">
                                  @i
                                </td>

                               <td class="text-sm">
                                   @Html.DisplayFor(modelItem => item.Command)
                               </td>     
                                 
                               <td class="text-sm">
                                   @Html.DisplayFor(modelItem => item.SPName)
                               </td>   
                                 
                               <td class="text-sm">
                                   @Html.DisplayFor(modelItem => item.ScreenPath)
                               </td>
                                                    
                               <td class="text-sm">
                                   @Html.DisplayFor(modelItem => item.OldValue)
                               </td>

                               <td class="text-sm">
                                   @Html.DisplayFor(modelItem => item.NewValue)
                               </td>                    

                               <td class="text-sm">
                                   @Html.DisplayFor(modelItem => item.CreatedBy)
                               </td>                    

                               <td class="text-sm">
                                    @Html.DisplayFor(modelItem => item.CreatedDt)
                               </td>
                                                 


                              </tr>

                                i++;
                            }
                        }
                        
                    </tbody>
                </table>
            </div>
           
        </div>

        @if (ViewBag.Message != null)
        {
            <script type="text/javascript">
                window.onload = function () {
                alert("@Html.Raw(ViewBag.Message)");
            };
            </script>
        }

    </section>
</div>